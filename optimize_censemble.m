% Set Seed
seed = 314159;
rng( seed );

% Import table
data = readtable( ...
    'combat_features.csv', ...
    'readvariablenames', true ...
    );
predictor_variable_names = { ...
    'left_first_type', ...
    'left_second_type', ...
    'right_first_type', ...
    'right_second_type', ...
    'hp_diff', ...
    'attack_diff', ...
    'defense_diff', ...
    'spatk_diff', ...
    'spdef_diff', ...
    'speed_diff' ...
    };
predictors = data{ :, predictor_variable_names };
response = data{ :, { 'left_side_won' } };
classes = unique( response );
if numel( classes ) > 2
    one_hot_classes = bsxfun( @eq, response( : ), classes );
else
    one_hot_classes = bsxfun( @eq, response( : ), classes( 2 ) );
end
observation_count = size( data, 1 );

% Hyperparameter Optimization
cross_validation_k_fold = 10;
part = cvpartition( ...
    observation_count, ...
    'kfold', cross_validation_k_fold ...
    );
opts = struct( ...
    'showplots', true, ...
    'cvpartition', part ...
    );
bagged_trees_model = fitcensemble( ...
    predictors, response, ...
    'optimizehyperparameters', 'auto', ...
    'hyperparameteroptimizationoptions', opts ...
    );